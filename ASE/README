-----------------------------------------notice--------------------------------------------------
eann.py is the interface with EANN package (if you use the EANN package which is old version)
reann.py is the interface with REANN package (***recommend*** this package is REANN)

***Very important thing***:
(1) Read the ase_eann.py how to set the parameter to use ase with reann(eann), especially atomtype.

(2) When you use this interfance for multiprocessing, there is a error about can't pickle module objects.
Because the interfance loads the nn model as initial, and pytorch can't deepcopy and can't pickle module.
If you appear these problems, you need to cancel the nn model as initial in reann.py, and write the pes in other place, 
such as in the calculator, although the speed is slower.
-------------------------------------------------------------------------------------------------


The eann.py and reann.py are placed in the PATH/ase/calculators/ folder.  (PATH is the path of ase)

And write the eann and reann calculator to the PATH/ase/calculators/calculator.py, which is the same as eam in 128 and 137 lines.
add the eann and reann to names, and add 'eann' : 'EANN', 'reann' :'REANN' to the special.

it is written by below:
names = ['abinit', 'ace', 'aims', 'amber', 'asap', 'castep', 'cp2k',
         'crystal', 'demon', 'demonnano', 'dftb', 'dftd3', 'dmol', 'eam','eann',
         'elk', 'emt', 'espresso', 'exciting', 'ff', 'fleur', 'gamess_us',
         'gaussian', 'gpaw', 'gromacs', 'gulp', 'hotbit', 'kim',
         'lammpslib', 'lammpsrun', 'lj', 'manual_written','mopac', 'morse', 'nwchem',
         'octopus', 'onetep', 'openmx', 'orca', 'psi4', 'qchem','reann', 'siesta',
         'tip3p', 'tip4p', 'turbomole', 'vasp']

special = {'cp2k': 'CP2K',
           'demonnano': 'DemonNano',
           'dftd3': 'DFTD3',
           'dmol': 'DMol3',
           'eam': 'EAM',
           'eann': 'EANN',
           'elk': 'ELK',
           'emt': 'EMT',
           'crystal': 'CRYSTAL',
           'ff': 'ForceField',
           'fleur': 'FLEUR',
           'gamess_us': 'GAMESSUS',
           'gulp': 'GULP',
           'kim': 'KIM',
           'lammpsrun': 'LAMMPS',
           'lammpslib': 'LAMMPSlib',
           'lj': 'LennardJones',
           'manual_written':'Manual_written',
           'mopac': 'MOPAC',
           'morse': 'MorsePotential',
           'nwchem': 'NWChem',
           'openmx': 'OpenMX',
           'orca': 'ORCA',
           ' reann': 'REANN',
           'qchem': 'QChem',
           'tip3p': 'TIP3P',
           'tip4p': 'TIP4P',
            }
            
ase_eann.py is the example how to use the ase with the eann and reann.
example is the example if or not operate successfully.
